# Generated by Neurodocker version 0.5.0
# Timestamp: 2019-11-27 18:21:48 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/kaczmarj/neurodocker

Bootstrap: docker
From: debian:stretch

%post
export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    ed \
    gsl-bin \
    libglib2.0-0 \
    libglu1-mesa-dev \
    libglw1-mesa \
    libgomp1 \
    libjpeg62 \
    libxm4 \
    netpbm \
    tcsh \
    xfonts-base \
    xvfb
apt-get clean
rm -rf /var/lib/apt/lists/*
curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
curl -sSL --retry 5 -o /tmp/toinstall.deb http://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
apt-get install -f
apt-get clean
rm -rf /var/lib/apt/lists/*
gsl2_path="$(find / -name 'libgsl.so.19' || printf '')"
if [ -n "$gsl2_path" ]; then
  ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0";
fi
ldconfig
echo "Downloading AFNI ..."
mkdir -p /opt/afni-latest
curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
| tar -xz -C /opt/afni-latest --strip-components 1

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libgomp1 \
    libxmu6 \
    libxt6 \
    perl \
    tcsh
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FreeSurfer ..."
mkdir -p /opt/freesurfer-6.0.0
curl -fsSL --retry 5 ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.0/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.0.tar.gz \
| tar -xz -C /opt/freesurfer-6.0.0 --strip-components 1 \
  --exclude='freesurfer/average/mult-comp-cor' \
  --exclude='freesurfer/lib/cuda' \
  --exclude='freesurfer/lib/qt' \
  --exclude='freesurfer/subjects/V1_average' \
  --exclude='freesurfer/subjects/bert' \
  --exclude='freesurfer/subjects/cvs_avg35' \
  --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \
  --exclude='freesurfer/subjects/fsaverage3' \
  --exclude='freesurfer/subjects/fsaverage4' \
  --exclude='freesurfer/subjects/fsaverage5' \
  --exclude='freesurfer/subjects/fsaverage6' \
  --exclude='freesurfer/subjects/fsaverage_sym' \
  --exclude='freesurfer/trctrain'
sed -i '$isource "/opt/freesurfer-6.0.0/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

echo "Downloading ANTs ..."
mkdir -p /opt/ants-2.3.1
curl -fsSL --retry 5 https://dl.dropbox.com/s/1xfhydsf4t4qoxg/ants-Linux-centos6_x86_64-v2.3.1.tar.gz \
| tar -xz -C /opt/ants-2.3.1 --strip-components 1

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    dc \
    file \
    libfontconfig1 \
    libfreetype6 \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libgomp1 \
    libice6 \
    libxcursor1 \
    libxft2 \
    libxinerama1 \
    libxrandr2 \
    libxrender1 \
    libxt6 \
    wget
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FSL ..."
mkdir -p /opt/fsl-6.0.1
curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.1-centos6_64.tar.gz \
| tar -xz -C /opt/fsl-6.0.1 --strip-components 1 
sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT
sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT
sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT
sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT


echo "Downloading Convert3D ..."
mkdir -p /opt/convert3d-1.0.0
curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \
| tar -xz -C /opt/convert3d-1.0.0 --strip-components 1

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    gcc \
    libc6-dev
apt-get clean
rm -rf /var/lib/apt/lists/*

export PATH="/opt/miniconda-latest/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-latest
rm -f "$conda_installer"
conda update -yq -nbase conda
conda config --system --prepend channels conda-forge
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
sync && conda clean --all && sync
conda create -y -q --name ICAaroma
conda install -y -q --name ICAaroma \
    'python=2.7'
sync && conda clean --all && sync
bash -c "source activate ICAaroma
  pip install --no-cache-dir  \
      'future' \
      'matplotlib==2.2' \
      'numpy==1.14' \
      'pandas==0.23' \
      'seaborn==0.9.0'"
rm -rf ~/.cache/pip/*
sync


mv /opt/license.txt /opt/freesurfer-6.0.0/

mv /opt/imcp /opt/fsl-6.0.1/bin/

mv /opt/immv /opt/fsl-6.0.1/bin/

mv /opt/imglob /opt/fsl-6.0.1/bin/

echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "debian:stretch"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "afni",
\n      {
\n        "version": "latest",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "freesurfer",
\n      {
\n        "version": "6.0.0",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "ants",
\n      {
\n        "version": "2.3.1",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "fsl",
\n      {
\n        "version": "6.0.1",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "convert3d",
\n      {
\n        "version": "1.0.0",
\n        "method": "binaries"
\n      }
\n    ],
\n    [
\n      "copy",
\n      [
\n        "/home/antoniojm/Documents/Projects/neuro_singularity/license.txt",
\n        "opt/"
\n      ]
\n    ],
\n    [
\n      "install",
\n      [
\n        "gcc",
\n        "libc6-dev"
\n      ]
\n    ],
\n    [
\n      "miniconda",
\n      {
\n        "create_env": "ICAaroma",
\n        "conda_install": [
\n          "python=2.7"
\n        ],
\n        "pip_install": [
\n          "future",
\n          "matplotlib==2.2",
\n          "numpy==1.14",
\n          "pandas==0.23",
\n          "seaborn==0.9.0"
\n        ]
\n      }
\n    ],
\n    [
\n      "run",
\n      "mv /opt/license.txt /opt/freesurfer-6.0.0/"
\n    ],
\n    [
\n      "env",
\n      {
\n        "FS_LICENSE": "/opt/freesurfer-6.0.0/license.txt"
\n      }
\n    ],
\n    [
\n      "copy",
\n      [
\n        "/home/antoniojm/Documents/Projects/neuro_singularity/imcp",
\n        "opt/"
\n      ]
\n    ],
\n    [
\n      "run",
\n      "mv /opt/imcp /opt/fsl-6.0.1/bin/"
\n    ],
\n    [
\n      "copy",
\n      [
\n        "/home/antoniojm/Documents/Projects/neuro_singularity/immv",
\n        "opt/"
\n      ]
\n    ],
\n    [
\n      "run",
\n      "mv /opt/immv /opt/fsl-6.0.1/bin/"
\n    ],
\n    [
\n      "copy",
\n      [
\n        "/home/antoniojm/Documents/Projects/neuro_singularity/imglob",
\n        "opt/"
\n      ]
\n    ],
\n    [
\n      "run",
\n      "mv /opt/imglob /opt/fsl-6.0.1/bin/"
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export PATH="/opt/afni-latest:$PATH"
export AFNI_PLUGINPATH="/opt/afni-latest"
export FREESURFER_HOME="/opt/freesurfer-6.0.0"
export PATH="/opt/freesurfer-6.0.0/bin:$PATH"
export ANTSPATH="/opt/ants-2.3.1"
export PATH="/opt/ants-2.3.1:$PATH"
export FSLDIR="/opt/fsl-6.0.1"
export PATH="/opt/fsl-6.0.1/bin:$PATH"
export C3DPATH="/opt/convert3d-1.0.0"
export PATH="/opt/convert3d-1.0.0/bin:$PATH"
export CONDA_DIR="/opt/miniconda-latest"
export PATH="/opt/miniconda-latest/bin:$PATH"
export FS_LICENSE="/opt/freesurfer-6.0.0/license.txt"

%files
/home/antoniojm/Documents/Projects/neuro_singularity/license.txt opt/
/home/antoniojm/Documents/Projects/neuro_singularity/imcp opt/
/home/antoniojm/Documents/Projects/neuro_singularity/immv opt/
/home/antoniojm/Documents/Projects/neuro_singularity/imglob opt/

%runscript
/neurodocker/startup.sh "$@"
